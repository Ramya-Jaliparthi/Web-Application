import { FadLandingPageComponentMode } from '../modals/types/fad.types';
import { environment } from '../../../../environments/environment';

export const FadConstants = Object.freeze({
  buttons: {
    search: 'Search'
  },

  elementRef: {
    fadSearchListMapContent: 'fad-search-list-map-content'
  },

  text: {
    areYouLookingFor: '', // 'Are you looking for?',
    notSureWhatToSearch: 'Not sure what to search for?',
    allSpecialities: 'All Specialties',
    allProcedures: 'All Procedures',
    landingPageTitle: 'Find a Doctor & Get Cost Estimates',
    landingPage_entity_placeHolder: 'Doctor Name, procedure, hospital, facility',
    landingPage_location_placeHolder: 'ZIP Code or City, State',
    landingPage_selectPlan_placeHolder: 'Select a plan',
    type: 'type',
    medicalIndexToHomeNavWarning: 'navigating from medical-index page to landing page',
    backSearchResults: 'Back to search results',
    specialities: 'Specialities',
    inNetwork: 'In-Network',
    acceptingNewPatients: 'Accepting New Patients',
    boardCertified: 'Board Certified',
    rating: 'Rating',
    languageSpokenProfessionalStaff: 'Language spoken by Professional or Staff',
    serviceAvailableLocation: 'Service available at location',
    remove: 'Remove',
    numberOfAwards: 'Number of Awards',
    blueDistinction: 'Blue Distinction',
    recommendToFriend: 'Would recommend to a friend',
    costBreakdown: 'Cost Breakdown',
    chart1: 'Chart1',
    chart2: 'Chart2',
    chart1HeaderText: 'Overall Deductible',
    chart1Param1Text: 'Spend',
    chart1Param2Text: 'Remaining',
    chart1Param3Text: 'This procedure',
    chart2HeaderText: 'Out-Of-Pocket Maximum Usage',
    chart2Param1Text: 'Spend',
    chart2Param2Text: 'Remaining',
    chart2BarColor: '#8FBE48',
    chart2BarColorRemaining: '#ade5ad',
    outPocketMaximumCoinsurance: '* Out-of-Pocket Maximum = Coinsurance',
    myCost: 'my cost',
    insuranceCost: 'insurance cost',
    totalCost: 'total cost',
    breakdownForMyCost: 'Breakdown for my cost',
    coinsuranceResponsibility: 'co-insurance responsibility',
    towardsDeductible: 'towards deductible',
    coPay: 'copay',
    dontSeePlan: 'Don\'t know or see your plan?',
    dontKnowPlan: 'I don\'t know my plan',
    leafLetAccessToken: 'pk.eyJ1Ijoib3ppbmlzbGUiLCJhIjoiY2ppYWJoaGR3MHp3ZTNxa3p3dnNnM2NiaCJ9.6k4AQo0CenMExQL9iObioQ',
    leafLetGeoCodingQueryTypes: ['postcode', 'place', 'region'],
    professional: 'professional',
    facility: 'facility',
    speciality: 'speciality',
    procedure: 'procedure',
    allDoctorOptionText: 'All doctors with ',
    allHospitalsOrFacilitiesText: 'All hospitals/facilities with '
  },

  components: {
    fadBaseSearchComponent: 'FadBaseSearchComponent',
    fadDoctorProfileComponent: 'FadDoctorProfileComponent',
    fadFacilityProfileComponent: 'FadFacilityProfileComponent',
    fadLandingPageComponent: 'FadLandingPageComponent',
    fadMedicalIndexComponent: 'FadMedicalIndexComponent',
    fadNoDocsPageComponent: 'FadNoDocsPageComponent',
    fadProfileCardComponent: 'FadProfileCardComponent',
    fadSearchFilterComponent: 'FadSearchFilterComponent',
    fadSearchListComponent: 'FadSearchListComponent',
    fadSearchResultsComponent: 'FadSearchResultsComponent',
    fadCompareTableComponent: 'FadCompareTableComponent',
    fadFacilityCompareComponent: 'fadFacilityCompareComponent',
    fadCostBreakdownComponent: 'fadCostBreakdownComponent',
    fadFacilityCardComponent: 'FadFacilityCardComponent',
    fadFacilitySearchFilterComponent: 'FadFacilitySearchFilterComponent',
  },

  errorMessages: {
    invalidServiceResponseData: 'Invalid Service Response Data',
  },

  flags: {
    fadLandingPageComponentMode_Normal: <FadLandingPageComponentMode>'Normal',
    fadLandingPageComponentMode_Abstract: <FadLandingPageComponentMode>'Abstract'
  },

  methods: {
    enhancedSearchAfterInitData: 'enhancedSearchAfterInitData',
    setInterval: 'setInterval',
    onZipCodeTypeaheadOptionSelectionChange: 'onZipCodeTypeaheadOptionSelectionChange',
    onSearchTextOptionSelected: 'onSearchTextOptionSelected',
    emboseZipCodeFieldOnScreen: 'emboseZipCodeFieldOnScreen',
    getMatchHighlightedTextInPlanOption: 'getMatchHighlightedTextInPlanOption',
    getMatchHighlightedTextInSearchTextOption: 'getMatchHighlightedTextInSearchTextOption',
    ngAfterViewInit: 'ngAfterViewInit',
    setTimeout: 'setTimeout',
    resolve: 'resolve',
    openProfile: 'openProfile',
    onSearchListComponentInteraction: 'onSearchListComponentInteraction',
    onLandingPageSearchComponentInteraction: 'onLandingPageSearchComponentInteraction',
    onSelectionChange: 'onSelectionChange',
    fetchPopupContent: 'fetchPopupContent',
    addMarkers: 'addMarkers',
    onTabSelectionChange: 'onTabSelectionChange',
    getFadProfileSearchResults: 'getFadProfileSearchResults',
    getIndexData: 'getIndexData',
    doSearch: 'doSearch',
    clearTargetValue: 'clearTargetValue',
    redirectRequestPlanDropDown: 'redirectRequestPlanDropDown',
    redirectToLogin: 'redirectToLogin',
    displayZipCodeDropDown: 'displayZipCodeDropDown',
    displaySearchTextAutoCompleteDropDown: 'displaySearchTextAutoCompleteDropDown',
    cancelSearchTextAutoCompleteDropDown: 'cancelSearchTextAutoCompleteDropDown',
    hiddenPlanDropDown: 'hiddenPlanDropDown',
    hiddenZipCodeDropDown: 'hiddenZipCodeDropDown',
    checkAndDisplayPlanDropDown: 'checkAndDisplayPlanDropDown',
    checkAndDisplayPastSearchHistory: 'checkAndDisplayPastSearchHistory',
    checkAndDisplayDependentListDropDown: 'checkAndDisplayDependentListDropDown',
    checkAndDisplayZipCodeDropDown: 'checkAndDisplayZipCodeDropDown',
    createInteractiveMap: 'createInteractiveMap',
    createSearchCriteria: 'createSearchCriteria',
    displayDependentListDropDown: 'displayDependentListDropDown',
    displayPastSearchHistory: 'displayPastSearchHistory',
    displayPastSearchHistoryDropDown: 'displayPastSearchHistoryDropDown',
    displayPlanDropDown: 'displayPlanDropDown',
    fetchMedicalIndex: 'fetchMedicalIndex',
    filterAutoCompleteSearchOptions: 'filterAutoCompleteSearchOptions',
    getLocationInfo: 'getLocationInfo',
    getPlanNameList: 'getPlanNameList',
    goToBaseSearchPage: 'goToBaseSearchPage',
    getVitalsZipCodeInfo: 'getVitalsZipCodeInfo',
    getLocationFromLatLong: 'getLocationFromLatLong',
    geoLocationMethod: 'geoLocationMethod',
    initData: 'initData',
    ngOnChanges: 'ngOnChanges',
    ngOnInit: 'ngOnInit',
    onListItemClicked: 'onListItemClicked',
    openMedicalIndex: 'openMedicalIndex',
    openSelectionList: 'openSelectionList',
    populateSearchFields: 'populateSearchFields',
    showDoctorList: 'showDoctorList',
    valueChanges: 'valueChanges',
    getVitalsPlanInfo: 'getVitalsPlanInfo',
    getVitalsAutoCompleteSearchResponse: 'getVitalsAutoCompleteSearchResponse',
    getCompareTableDetail: 'getCompareTableDetail',
    costBreakdownAsLineChartOptions: 'costBreakdownAsLineChartOptions',
    selectAutoCompleteSearchTextOption: 'selectAutoCompleteSearchTextOption',
    getDoctorProfileDetails: 'getDoctorProfileDetails',
    getFacilityProfileDetails: 'getFacilityProfileDetails',
    searchTypeOptLableClickHandler: 'searchTypeOptLableClickHandler',
    getCostBreakDownData: 'getCostBreakDownData',
  },

  services: {
    fadBaseSearchService: 'FadBaseSearchService',
    fadDoctorProfileService: 'FadDoctorProfileService',
    fadFacilityProfileService: 'FadFacilityProfileService',
    fadFacilitySearchResultsService: 'FadFacilitySearchResultsService',
    fadLandingPageService: 'FadLandingPageService',
    fadMapSearchService: 'FadMapSearchService',
    fadMedicalIndexService: 'FadMedicalIndexService',
    fadNoDocsPageService: 'FadNoDocsPageService',
    fadSearchFilterService: 'FadSearchFilterService',
    fadSearchListService: 'FadSearchListService',
    FadDoctorProfileService: 'FadDoctorProfileService',
    fadSearchResultsService: 'FadSearchResultsService',
    fadSearchResultsResolver: 'FadSearchResultsResolver',
    fadDoctorProfileResolver: 'FadDoctorProfileResolver',
    FadFacilityProfileResolver: 'FadFacilityProfileResolver',
    fadService: 'FadService',
    landingPageService: 'landingPageService',
    searchTypeAheadControl_valueChanges: 'searchTypeAheadControl_valueChanges',
    planControl_valueChanges: 'planControl_valueChanges',
    fadCompareTableService: 'FadCompareTableService',
    fadFacilityCompareService: 'fadFacilityCompareService',
    fadCostBreakDownService: 'FadCostBreakdownService',
  },

  urls: {
    fadLandingPage: '/fad',
    fadLandingPageSearchAutocompleteListUrl: '/autocomplete/search',
    fadLandingPageProfessionalsSearchListUrl: `${environment.serviceUrl}vitalscommon/searchbyprofessional`,
    fadLandingPageFacilitiesSearchListUrl: `${environment.serviceUrl}vitalscommon/searchbyfacilities`,
    fadLandingPagePlansAutocompleteListUrl: '/plans',
    fadLandingPageZipcodeAutocompleteListUrl: `${environment.serviceUrl}vitals/public/citysearch`,
    fadSearchHistoryUrl: '/recent/searches',
    fadVitalsSpecialitiesUrl: `${environment.serviceUrl}vitalscommon/searchbyspeciality`,
    professionalprofile: `${environment.serviceUrl}vitalscommon/professionalprofile`,
    facilityProfile: `${environment.serviceUrl}vitalscommon/facilityprofile`,
    fadSearchResultsPage: '/fad/search-results',
    fadPastSearchQueries: '/fad/past-search-queries',
    fadCompareTablePage: '/fad/compare-table',
    fadFacilityCompareUrl: '/fad/facility-compare',
    fadGetDoctorProfile: '/web/vitals/v1/doctorprofile/getDoctorProfile',
    fadGetFacilityProfile: '/web/vitals/v1/doctorprofile/getFacilityProfile',
    fadDoctorProfilePage: '/fad/doctor-profile',
    fadFacilityProfilePage: '/fad/facility-profile',
    fadCostBreakDownUrl: '/fad/cost-breakdown',
  },

  jsonurls: {
    fadLandingPage: '/fad',

    // fadLandingPageSearchAutocompleteListUrl: '/assets/data/fad/vitals_autoComplete_Search.json',
    // fadLandingPageSearchAutocompleteListUrl: `${environment.serviceUrl}vitalscommon/searchbyprovider`,
    fadLandingPageSearchAutocompleteListUrl: `${environment.serviceUrl}vitalscommon/autocomplete`,
    fadLandingPageProfessionalsSearchListUrl: '/assets/data/fad/vitals_professional_search_MultipleOuput.json',
    fadLandingPagePlansAutocompleteListUrl: '/assets/data/fad/vitals_plans.json',
    fadLandingPageZipcodeAutocompleteListUrl: 'https://uat.bcbsma.vitalschoice.com/api/places/cities.json',
    // fadLandingPageZipcodeAutocompleteListUrl: '/assets/data/fad/vitals_cities.json',
    fadSearchHistoryUrl: '/assets/data/fad/vitals_past_10_searches.json',
    fadVitalsSpecialitiesUrl: '/assets/data/fad/vitals_specialities_search.json',
    fadSearchResultsPage: '/fad/search-results',
    fadPastSearchQueries: '/fad/past-search-queries',
    fadCompareTableUrl: '/assets/data/fad/compare_table_doctor.json',
    fadFacilityCompareUrl: '/assets/data/fad/facility-compare.json',
    fadGetDoctorProfile: '/assets/data/fad/doctor_profile_sample.json',
    fadGetFacilityProfile: '/assets/data/fad/facility_profile_sample.json',
    fadGetprofessionalratings: '/assets/data/fad/doctor_profile_rating.json',
    fadDoctorProfilePage: '/fad/doctor-profile',
    fadCostBreakDownUrl: '/assets/data/fad/doctor_profile_sample.json',
  },

  defaults: {
    zipCode: '02169',
    city: 'Quincy',
    stateCode: 'MA',
    geo: '42.242921,-71.009972',
    planName: 'HMO Blue',
    planId: 311005011,
    networkId: 311005011,
    specialityId: 311000253,
    radius: 25,
    limit: 10,
    page: 1,
    autoCompleteSearchRequest_limit: 5,
    autoCompleteSearchRequest_page: 1
  },

  plans: {
    myCurrentPlanOption: 'my-current-plan-option',
    dontKnowPlanOption: 'dont-know-plan-option',
    dontKnowPlanOptionId: -1,
    defaultOption: 'default-option'
  }


});

